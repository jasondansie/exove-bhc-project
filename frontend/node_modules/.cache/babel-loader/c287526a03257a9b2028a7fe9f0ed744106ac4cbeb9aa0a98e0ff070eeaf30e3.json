{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Documents\\\\GitHub\\\\exove-bhc-project\\\\frontend\\\\src\\\\app\\\\CreateSurvey.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PageHeading from './PageHeading';\nimport classes from './CreateSurvey.module.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSurvey = () => {\n  _s();\n  const [questionList, setQuestionList] = useState([]);\n  const [savedQuestionList, setSavedQuestionList] = useState([]);\n  const [survey, setSurvey] = useState([]);\n  const [surveyName, setSurveyName] = useState([]);\n  const [description, setDescription] = useState([]);\n  const [checkedBoxes, setCheckedBoxes] = useState([]);\n  const [formData, setFormData] = useState({\n    surveyName: \"\",\n    description: \"\",\n    questions: []\n  });\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/list/questions\").then(response => {\n      setQuestionList(response.data);\n    }).catch(error => {\n      console.error(error);\n      // Add logic to handle the error if needed\n    });\n  }, [setQuestionList]);\n  const onchangeHandler = e => {\n    //   setSurvey({ ...survey, [e.target.name]: e.target.value })\n    if (e.target.name === \"surveyName\") {\n      setSurveyName({\n        ...surveyName,\n        [e.target.value]: e.target.value\n      });\n    } else {\n      setDescription({\n        ...description,\n        [e.target.value]: e.target.value\n      });\n    }\n  };\n  const checkboxHandler = event => {\n    const {\n      name,\n      checked,\n      value,\n      id\n    } = event.target;\n    if (checked) {\n      setCheckedBoxes([...checkedBoxes, value]);\n      console.log(\"question list: \", questionList);\n      console.log(\"value: \", value);\n    } else {\n      setCheckedBoxes(checkedBoxes.filter(box => box !== name));\n    }\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(\"checkedBoxes: \", checkedBoxes);\n    const questions = checkedBoxes.map(box => box);\n    console.log(\"question: \", questions);\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      questions\n    }));\n\n    // console.log(\"submitted\", formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PageHeading, {\n      pageTitle: \"Create Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.top,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.maincontent,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"POST\",\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Survey Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"surveyName\",\n              onChange: onchangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              onChange: onchangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: questionList.map((question, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: question._id,\n                children: question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: question._id,\n                value: question._id,\n                onChange: checkboxHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, question._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateSurvey, \"+Jy4hsukZBxPWwN1sxFfpE/LztY=\");\n_c = CreateSurvey;\nexport default CreateSurvey;\nvar _c;\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"names":["React","useState","useEffect","PageHeading","classes","axios","jsxDEV","_jsxDEV","CreateSurvey","_s","questionList","setQuestionList","savedQuestionList","setSavedQuestionList","survey","setSurvey","surveyName","setSurveyName","description","setDescription","checkedBoxes","setCheckedBoxes","formData","setFormData","questions","get","then","response","data","catch","error","console","onchangeHandler","e","target","name","value","checkboxHandler","event","checked","id","log","filter","box","submitHandler","preventDefault","map","prevFormData","children","pageTitle","fileName","_jsxFileName","lineNumber","columnNumber","className","top","maincontent","action","onSubmit","type","onChange","question","i","htmlFor","_id","_c","$RefreshReg$"],"sources":["C:/Users/Jason/Documents/GitHub/exove-bhc-project/frontend/src/app/CreateSurvey.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PageHeading from './PageHeading';\r\nimport classes from './CreateSurvey.module.css'\r\nimport axios from 'axios';\r\n\r\ninterface Question {\r\n  _id: string;\r\n  question: string;\r\n}\r\n\r\ninterface saveQuestions {\r\n\r\n}\r\n\r\ninterface survey {\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\ninterface FormData {\r\n  surveyName: string;\r\n  description: string;\r\n  questions: string[];\r\n}\r\n\r\nconst CreateSurvey: React.FC = () => {\r\n  const [questionList, setQuestionList] = useState<Question[]>([]);\r\n  const [savedQuestionList, setSavedQuestionList] = useState<saveQuestions[]>([]);\r\n  const [survey, setSurvey] = useState<survey[]>([]);\r\n  const [surveyName, setSurveyName] = useState<survey[]>([]);\r\n  const [description, setDescription] = useState<survey[]>([]);\r\n  const [checkedBoxes, setCheckedBoxes] = useState<string[]>([]);\r\n  const [formData, setFormData] = useState<FormData>({\r\n    surveyName: \"\",\r\n    description: \"\",\r\n    questions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get<Question[]>(\"http://localhost:5000/list/questions\")\r\n      .then(response => {\r\n        setQuestionList(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        // Add logic to handle the error if needed\r\n      });\r\n\r\n  }, [setQuestionList])\r\n\r\n  const onchangeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    //   setSurvey({ ...survey, [e.target.name]: e.target.value })\r\n    if (e.target.name === \"surveyName\") {\r\n      setSurveyName({ ...surveyName, [e.target.value]: e.target.value })\r\n    } else {\r\n      setDescription({ ...description, [e.target.value]: e.target.value })\r\n    }\r\n  }\r\n\r\n  const checkboxHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, checked, value, id } = event.target;\r\n\r\n    if (checked) {\r\n      setCheckedBoxes([...checkedBoxes, value]);\r\n      console.log(\"question list: \", questionList);\r\n      console.log(\"value: \", value);\r\n    } else {\r\n      setCheckedBoxes(checkedBoxes.filter((box) => box !== name));\r\n    }\r\n  };\r\n\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    console.log(\"checkedBoxes: \", checkedBoxes);\r\n    const questions = checkedBoxes.map((box) => box);\r\n    console.log(\"question: \", questions);\r\n    setFormData((prevFormData) => ({ ...prevFormData, questions }));\r\n\r\n    // console.log(\"submitted\", formData);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <PageHeading\r\n        pageTitle=\"Create Survey\"\r\n      />\r\n      <div className={classes.top}>\r\n        <div className={classes.maincontent}>\r\n          <form action=\"POST\" onSubmit={submitHandler}>\r\n            <label>\r\n              Survey Name:\r\n              <input type=\"text\" name=\"surveyName\" onChange={onchangeHandler} />\r\n            </label>\r\n            <label>\r\n              Description:\r\n              <input type=\"text\" name=\"description\" onChange={onchangeHandler} />\r\n            </label>\r\n            <div>\r\n              {questionList.map((question, i) => (\r\n                <div key={question._id}>\r\n                  <label htmlFor={question._id}>{question.question}</label>\r\n                  <input type=\"checkbox\" name={question._id} value={question._id} onChange={checkboxHandler} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateSurvey;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}