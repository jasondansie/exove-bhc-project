{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  surveyName: \"\",\n  surveySubject: \"\",\n  questions: [],\n  answers: {},\n  surveyStatus: \"notStarted\"\n};\nconst surveySlice = createSlice({\n  name: \"survey\",\n  initialState,\n  reducers: {\n    setSurveyName: (state, action) => {\n      state.surveyName = action.payload;\n    },\n    setSurveySubject: (state, action) => {\n      state.surveySubject = action.payload;\n    },\n    setQuestions: (state, action) => {\n      state.questions = action.payload;\n    },\n    setAnswer: (state, action) => {\n      state.answers[action.payload.question] = action.payload.answer;\n    },\n    setSurveyStatus: (state, action) => {\n      state.surveyStatus = action.payload;\n    }\n  }\n});\nexport const {\n  setSurveyName,\n  setSurveySubject,\n  setQuestions,\n  setAnswer,\n  setSurveyStatus\n} = surveySlice.actions;\nexport const selectSurvey = state => state.survey;\nexport default surveySlice.reducer;","map":{"version":3,"names":["createSlice","initialState","surveyName","surveySubject","questions","answers","surveyStatus","surveySlice","name","reducers","setSurveyName","state","action","payload","setSurveySubject","setQuestions","setAnswer","question","answer","setSurveyStatus","actions","selectSurvey","survey","reducer"],"sources":["C:/Users/Jason/Documents/GitHub/exove-bhc-project/frontend/src/redux/features/survey/surveySlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../store\";\r\n\r\ninterface SurveyState {\r\n  surveyName: string;\r\n  surveySubject: string;\r\n  questions: string[];\r\n  answers: { [key: string]: string };\r\n  surveyStatus: \"notStarted\" | \"inProgress\" | \"completed\";\r\n}\r\n\r\nconst initialState: SurveyState = {\r\n  surveyName: \"\",\r\n  surveySubject: \"\",\r\n  questions: [],\r\n  answers: {},\r\n  surveyStatus: \"notStarted\",\r\n};\r\n\r\nconst surveySlice = createSlice({\r\n  name: \"survey\",\r\n  initialState,\r\n  reducers: {\r\n    setSurveyName: (state, action: PayloadAction<string>) => {\r\n      state.surveyName = action.payload;\r\n    },\r\n    setSurveySubject: (state, action: PayloadAction<string>) => {\r\n      state.surveySubject = action.payload;\r\n    },\r\n    setQuestions: (state, action: PayloadAction<string[]>) => {\r\n      state.questions = action.payload;\r\n    },\r\n    setAnswer: (\r\n      state,\r\n      action: PayloadAction<{ question: string; answer: string }>\r\n    ) => {\r\n      state.answers[action.payload.question] = action.payload.answer;\r\n    },\r\n    setSurveyStatus: (\r\n      state,\r\n      action: PayloadAction<\"notStarted\" | \"inProgress\" | \"completed\">\r\n    ) => {\r\n      state.surveyStatus = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setSurveyName,\r\n  setSurveySubject,\r\n  setQuestions,\r\n  setAnswer,\r\n  setSurveyStatus,\r\n} = surveySlice.actions;\r\n\r\nexport const selectSurvey = (state: RootState) => state.survey;\r\nexport default surveySlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAW7D,MAAMC,YAAyB,GAAG;EAChCC,UAAU,EAAE,EAAE;EACdC,aAAa,EAAE,EAAE;EACjBC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,CAAC,CAAC;EACXC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAGP,WAAW,CAAC;EAC9BQ,IAAI,EAAE,QAAQ;EACdP,YAAY;EACZQ,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACvDD,KAAK,CAACT,UAAU,GAAGU,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,gBAAgB,EAAEA,CAACH,KAAK,EAAEC,MAA6B,KAAK;MAC1DD,KAAK,CAACR,aAAa,GAAGS,MAAM,CAACC,OAAO;IACtC,CAAC;IACDE,YAAY,EAAEA,CAACJ,KAAK,EAAEC,MAA+B,KAAK;MACxDD,KAAK,CAACP,SAAS,GAAGQ,MAAM,CAACC,OAAO;IAClC,CAAC;IACDG,SAAS,EAAEA,CACTL,KAAK,EACLC,MAA2D,KACxD;MACHD,KAAK,CAACN,OAAO,CAACO,MAAM,CAACC,OAAO,CAACI,QAAQ,CAAC,GAAGL,MAAM,CAACC,OAAO,CAACK,MAAM;IAChE,CAAC;IACDC,eAAe,EAAEA,CACfR,KAAK,EACLC,MAAgE,KAC7D;MACHD,KAAK,CAACL,YAAY,GAAGM,MAAM,CAACC,OAAO;IACrC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXH,aAAa;EACbI,gBAAgB;EAChBC,YAAY;EACZC,SAAS;EACTG;AACF,CAAC,GAAGZ,WAAW,CAACa,OAAO;AAEvB,OAAO,MAAMC,YAAY,GAAIV,KAAgB,IAAKA,KAAK,CAACW,MAAM;AAC9D,eAAef,WAAW,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}